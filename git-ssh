#!/usr/bin/env bash

_usage () {
  echo "usage: git ssh <remote>"
  echo "   or: git ssh <remote> [-t] <command>"
  exit 1
}

_error () {
  echo "$@" >&2
  exit 1
}

get_remote_url () {
  if ! git config remote."$1".url > /dev/null
  then
    _error "Remote $1 does not exist in your git config"
  fi
  local remote_url=$(git config remote."$1".url)
  case $remote_url in
    file://*)    _error "Protocol not supported: $remote_url";;
    https://*)   _error "Protocol not supported: $remote_url";;
    http://*)    _error "Protocol not supported: $remote_url";;
    git://*)     _error "Protocol not supported: $remote_url";;
    git+ssh://*) echo "$remote_url";;
    ssh://*)     echo "$remote_url";;
    *:*)         echo "$remote_url";;
  esac
}

_getRemoteHost () {
  case $1 in
    git+ssh://*) echo "$1" | cut -d/ -f3;;
    ssh://*)     echo "$1" | cut -d/ -f3;;
    *:*)         echo "$1" | cut -d: -f1;;
  esac
}

_getRemoteDirectory () {
  case $1 in
    git+ssh://*) echo "$1" | cut -d/ -f4-;;
    ssh://*)     echo "$1" | cut -d/ -f4-;;
    *:*)         echo "$1" | cut -d: -f2;;
  esac
}

_sshcd () {
  ssh "$(_getRemoteHost "$remote_url")" $ssh_opts $ssh_tty "cd '"$(_getRemoteDirectory "$remote_url")"' && $@"
  exit $?
}

case $1 in
  ''|h|help|\?|-h|--help)
    _usage
    ;;
  *)
    remote_url=$(get_remote_url "$1")
    shift
    ;;
esac

ssh_opts=""
ssh_tty=""
while true
do
  case $1 in
    -1|-2|-4|-6|-A|-a|-C|-f|-g|-K|-k|-M|-N|-n|-q|-s|-V|-v|-X|-x|-Y|-y)
      ssh_opts="$ssh_opts $1"
      shift
      ;;
    -b|-c|-D|-e|-F|-I|-i|-L|-l|-m|-O|-o|-p|-R|-S|-W|-w)
      ssh_opts="$ssh_opts $1 $2"
      shift
      shift
      ;;
    -t|-T)
      ssh_tty="$1"
      shift
      ;;
    '')
      ssh_tty=${ssh_tty:--t}
      _sshcd "exec "'${SHELL:-/bin/bash}'
      ;;
    *)
      _sshcd "$@"
      ;;
  esac
done
